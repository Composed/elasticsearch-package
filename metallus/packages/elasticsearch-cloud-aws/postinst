#!/bin/bash
set -e

upgraded_from=$2

reload_service() {
  sv -v down elasticsearch
  sv -v up elasticsearch
}

case "$1" in
    configure)
      set -e

      if [ -z "${AWS_SECURITY_GROUPS}" ]; then
        AWS_SECURITY_GROUPS="$(curl -Ss http://169.254.169.254/1.0/meta-data/security-groups/ | paste -d, -s - )"
      fi

      security_groups_opts="/etc/elasticsearch/opts.d/cloud-aws-groups"
      if ! [ -f "$security_groups_opts" ]; then
        echo "-Des.discovery.ec2.groups=${AWS_SECURITY_GROUPS}" \
          > "${security_groups_opts}"
      fi

      python <<EOF
import yaml

with open("/etc/elasticsearch/elasticsearch.yml", "r+") as f:
    contents = yaml.load(f)
    contents["script.disable_dynamic"] = True
    f.seek(0)
    f.truncate()
    f.write(yaml.dump(contents, default_flow_style=False))
EOF

    # if $2 is set, this is an upgrade
    if ( [ -n "$2" ] && [ "$RESTART_ON_UPGRADE" = "true" ] ) ; then
      sv restart elasticsearch
    fi
    ;;

    triggered)
        reload_service
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "$APP_NAME $0 called with unknown argument '$1'" >&2
        exit 1
    ;;
esac
