#!/bin/sh

exec 2>&1

PATH=/bin:/usr/bin:/sbin:/usr/sbin
NAME=elasticsearch
DESC="ElasticSearch Server"
DEFAULT=/etc/default/$NAME

. /lib/lsb/init-functions

if [ -r /etc/default/rcS ]; then
  . /etc/default/rcS
fi


# The following variables can be overwritten in $DEFAULT

# Run ElasticSearch as this user ID and group ID
ES_USER=elasticsearch
ES_GROUP=elasticsearch

# The first existing directory is used for JAVA_HOME (if JAVA_HOME is not defined in $DEFAULT)
JDK_DIRS="/usr/lib/jvm/java-7-oracle /usr/lib/jvm/java-7-openjdk /usr/lib/jvm/java-7-openjdk-amd64/ /usr/lib/jvm/java-7-openjdk-armhf /usr/lib/jvm/java-7-openjdk-i386/ /usr/lib/jvm/java-6-sun /usr/lib/jvm/java-6-openjdk /usr/lib/jvm/java-6-openjdk-amd64 /usr/lib/jvm/java-6-openjdk-armhf /usr/lib/jvm/java-6-openjdk-i386 /usr/lib/jvm/default-java"

# Look for the right JVM to use
for jdir in $JDK_DIRS; do
  if [ -r "$jdir/bin/java" -a -z "${JAVA_HOME}" ]; then
    JAVA_HOME="$jdir"
  fi
done
export JAVA_HOME

# Directory where the ElasticSearch binary distribution resides
ES_HOME=/usr/share/$NAME

# Heap Size (defaults to 256m min, 1g max)
#ES_HEAP_SIZE=2g

# Heap new generation
#ES_HEAP_NEWSIZE=

# max direct memory
#ES_DIRECT_SIZE=

# Additional Java OPTS
#ES_JAVA_OPTS=

# Maximum number of open files
MAX_OPEN_FILES=65535

# Maximum amount of locked memory
#MAX_LOCKED_MEMORY=

# ElasticSearch log directory
LOG_DIR=/var/log/$NAME

# ElasticSearch data directory
DATA_DIR=/var/lib/$NAME

# ElasticSearch work directory
WORK_DIR=/tmp/$NAME

# ElasticSearch configuration directory
CONF_DIR=/etc/$NAME

# ElasticSearch configuration file (elasticsearch.yml)
CONF_FILE=$CONF_DIR/elasticsearch.yml

# Maximum number of VMA (Virtual Memory Areas) a process can own
MAX_MAP_COUNT=262144

# End of variables that can be overwritten in $DEFAULT

# overwrite settings from default file
if [ -f "$DEFAULT" ]; then
  . "$DEFAULT"
fi

# Define other required variables
DAEMON=$ES_HOME/bin/elasticsearch
DAEMON_OPTS="-Des.default.config=$CONF_FILE -Des.default.path.home=$ES_HOME -Des.default.path.logs=$LOG_DIR -Des.default.path.data=$DATA_DIR -Des.default.path.work=$WORK_DIR -Des.default.path.conf=$CONF_DIR"

daemon_opts_dir=${CONF_DIR}/opts.d
if [ -d "$daemon_opts_dir" ]; then
  for opts_file in ${daemon_opts_dir}/*; do
    DAEMON_OPTS="${DAEMON_OPTS} $(cat "$opts_file")"
  done
fi

export ES_HEAP_SIZE
export ES_HEAP_NEWSIZE
export ES_DIRECT_SIZE
export ES_JAVA_OPTS

# Check DAEMON exists
test -x $DAEMON || exit 0

if [ -x "$JAVA_HOME/bin/java" ]; then
  JAVA="$JAVA_HOME/bin/java"
else
  JAVA="$(command -v java)"
fi

if [ ! -x "$JAVA" ]; then
  echo "Could not find any executable java binary. Please install java in your PATH or set JAVA_HOME"
  exit 1
fi

# Prepare environment
mkdir -p "$LOG_DIR" "$DATA_DIR" "$WORK_DIR" && chown "$ES_USER":"$ES_GROUP" "$LOG_DIR" "$DATA_DIR" "$WORK_DIR"

if [ -n "$MAX_OPEN_FILES" ]; then
  ulimit -n $MAX_OPEN_FILES
fi

if [ -n "$MAX_LOCKED_MEMORY" ]; then
  ulimit -l $MAX_LOCKED_MEMORY
fi

if [ -n "$MAX_MAP_COUNT" ]; then
  sysctl -q -w vm.max_map_count=$MAX_MAP_COUNT
fi

# If an include wasn't specified in the environment, then search for one...
# Locations (in order) to use when searching for an include file.
if [ -r "/usr/share/elasticsearch/bin/elasticsearch.in.sh" ]; then
  . "/usr/share/elasticsearch/bin/elasticsearch.in.sh"
fi

ES_PARAMS="-Delasticsearch -Des.foreground=yes"

exec chpst -u ${ES_USER}:${ES_GROUP} "$JAVA" $JAVA_OPTS $ES_JAVA_OPTS $ES_PARAMS -Des.path.home="$ES_HOME" -cp "$ES_CLASSPATH" $DAEMON_OPTS \
                org.elasticsearch.bootstrap.ElasticSearch
